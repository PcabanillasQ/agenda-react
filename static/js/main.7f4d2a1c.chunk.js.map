{"version":3,"sources":["components/Formulario.js","components/Contacto.js","components/Contactos.js","components/Header.js","components/ContactoSeleccionado.js","App.js","reportWebVitals.js","index.js"],"names":["Formulario","agregarContacto","useState","nombres","apellidos","fechaNac","direccion","telefono","celular","observaciones","contacto","setContacto","error","setError","handleChange","e","contactoAntiguo","target","name","value","onSubmit","preventDefault","trim","copiaContacto","id","uuidv4","className","role","htmlFor","type","placeholder","onChange","cols","rows","Contacto","setContactoSelec","urlAvatar","onClick","src","alt","Contactos","contactos","map","c","Header","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","aria-disabled","ContactoSeleccionado","contactoSelec","App","contactosLS","JSON","parse","localStorage","getItem","setContactos","objContacto","contactosAntiguos","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f4d2a1c.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nconst Formulario = ({agregarContacto}) => {\r\n\r\n    const [contacto, setContacto] = useState({\r\n        nombres: '',\r\n        apellidos: '',\r\n        fechaNac: '',\r\n        direccion: '',\r\n        telefono: '',\r\n        celular: '',\r\n        observaciones: ''\r\n    });\r\n\r\n    const [error,setError]= useState(false);\r\n\r\n    const handleChange=(e)=>{\r\n        let contactoAntiguo = {...contacto};\r\n        contactoAntiguo[e.target.name]=e.target.value;\r\n        setContacto(contactoAntiguo);\r\n    }\r\n\r\n    const EnviarFomulario=(e)=>{\r\n        e.preventDefault();\r\n        let { nombres, apellidos, fechaNac, direccion, telefono, celular, observaciones} = contacto;\r\n        if(nombres.trim() ===\"\" || apellidos.trim() ===\"\" || fechaNac.trim() ===\"\" || direccion.trim() ===\"\" \r\n            || telefono.trim() ===\"\" || celular.trim() ===\"\" || observaciones.trim() ===\"\"){\r\n            setError(true);    \r\n            return;      \r\n        }else{\r\n            setError(false);\r\n            let copiaContacto = {...contacto};\r\n            copiaContacto.id = uuidv4();\r\n            agregarContacto(copiaContacto); \r\n            setContacto({\r\n                nombres: '',\r\n                apellidos: '',\r\n                fechaNac: '',\r\n                direccion: '',\r\n                telefono: '',\r\n                celular: '',\r\n                observaciones: ''\r\n            });           \r\n        }  \r\n    }     \r\n\r\n    return (\r\n       \r\n        <Fragment>\r\n            <form onSubmit={EnviarFomulario}>        \r\n            { error ?   <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            <strong>ERROR!!</strong> Complete todos los campos\r\n                        </div>\r\n                    : null\r\n            }\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col-md-4 col-xl-3\">\r\n                    <label htmlFor=\"inputNombres\">Nombres:</label>\r\n                    <input type=\"text\" name=\"nombres\" className=\"form-control form-control-sm\" id=\"inputNombres\" placeholder=\"ingrese nombres\"\r\n                        \r\n                        onChange={handleChange}\r\n                        value={contacto.nombres}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group col-md-4 col-xl-3\">\r\n                    <label htmlFor=\"inputApellidos\">Apellidos:</label>\r\n                    <input type=\"text\" name=\"apellidos\" className=\"form-control form-control-sm\" id=\"inputApellidos\"\r\n                        value={contacto.apellidos}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group col-md-4 col-xl-3\">\r\n                    <label htmlFor=\"inputNac\">Fecha Nacimiento:</label>\r\n                    <input type=\"date\" name=\"fechaNac\" className=\"form-control form-control-sm\" id=\"inputNac\"\r\n                        value={contacto.fechaNac}\r\n                        onChange={handleChange}\r\n                     />\r\n                </div>            \r\n                <div className=\"form-group col-md-4 col-xl-3\">\r\n                <label htmlFor=\"inputDir\">Dirección:</label>\r\n                <input type=\"text\" name=\"direccion\" className=\"form-control form-control-sm\" id=\"inputDir\" placeholder=\"1234 Main St\" \r\n                    value={contacto.direccion}\r\n                    onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"form-group col-md-4 col-xl-3\">\r\n                    <label htmlFor=\"inputTelf\">Teléfono:</label>\r\n                    <input type=\"text\" name=\"telefono\" className=\"form-control form-control-sm\" id=\"inputTelf\"\r\n                        value={contacto.telefono}\r\n                        onChange={handleChange} />\r\n                </div>\r\n                <div className=\"form-group col-md-4 col-xl-3\">\r\n                    <label htmlFor=\"inputCel\">Celular:</label>\r\n                    <input type=\"text\" name=\"celular\" className=\"form-control form-control-sm\" id=\"inputCel\"\r\n                        value={contacto.celular}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group col-md-12 col-xl-6\">\r\n                    <label htmlFor=\"txtAreaComent\">Comentarios:</label>\r\n                    <textarea name=\"observaciones\" className=\"form-control form-control-sm\" id=\"txtAreaComent\" cols=\"30\" rows=\"3\"\r\n                        value={contacto.observaciones}\r\n                        onChange={handleChange}\r\n                    ></textarea>\r\n                </div>          \r\n            </div>  \r\n            <button type=\"submit\" className=\"btn btn-block btn-info\">Agregar contacto</button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Formulario\r\n","import React from 'react'\r\n\r\nconst Contacto = ({contacto, setContactoSelec}) => {\r\n    let urlAvatar= `https://ui-avatars.com/api/?background=random&color=fff&bold=true&size=40&name=${contacto.nombres}+${contacto.apellidos}`;\r\n\r\n    return (\r\n        <li className=\"list-group-item\"\r\n            onClick={()=>{\r\n                setContactoSelec(contacto);\r\n            }\r\n        }>\r\n            <img className=\"rounded-circle mr-2\" src={urlAvatar} alt=\"\"/>\r\n            {contacto.nombres} {contacto.apellidos }</li> \r\n    )\r\n}\r\n\r\nexport default Contacto\r\n","import React from 'react';\r\nimport Contacto from './Contacto';\r\n\r\n\r\nconst Contactos = ({contactos, setContactoSelec}) => {\r\n  \r\n    return (        \r\n        <ul className=\"list-group list-group-flush\">\r\n            {              \r\n                contactos.map(c=>(\r\n                <Contacto contacto={c} setContactoSelec={setContactoSelec} key={c.id}/>\r\n                ))\r\n            }\r\n                      \r\n        </ul>\r\n            \r\n      \r\n    )\r\n}\r\n\r\nexport default Contactos\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n \r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\" href=\"#\"><strong>Agenda</strong>REACT</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">Link</a>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Dropdown\r\n                        </a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                        <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                        <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                        <div className=\"dropdown-divider\"></div>\r\n                        <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\" /* tabindex=\"-1\" */ aria-disabled=\"true\">Disabled</a>\r\n                    </li>\r\n                    </ul>\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-outline-info my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { Fragment } from 'react'\r\n\r\nconst ContactoSeleccionado = ({contactoSelec}) => {\r\n    \r\n    return (\r\n        <div className=\"card shadow\">\r\n        <div className=\"card-header bg-dark text-light text-center\">\r\n        Información de Contacto\r\n        </div>\r\n        <div className=\"card-body\">            \r\n        {\r\n            contactoSelec.nombres?            \r\n                <Fragment>\r\n                    <h5 className=\"card-title\">{contactoSelec.nombres} {contactoSelec.apellidos}</h5>\r\n                    <img src=\"https://i.pravatar.cc/300\" alt=\"\" className=\"d-block m-auto\"/>\r\n                    <p className=\"card-text\">\r\n                    <strong>Fecha Nacimiento: </strong> {contactoSelec.fechaNac}\r\n                    </p>\r\n                    <p className=\"card-text\">\r\n                    <strong>Mi dirección es:</strong> {contactoSelec.direccion}\r\n                    </p>\r\n                    <p className=\"card-text\">\r\n                    <strong>Mi Telefono y celular es:</strong> {contactoSelec.telefono} / {contactoSelec.celular}\r\n                    </p>\r\n                    <p className=\"card-text\">\r\n                    <strong>Comentarios:</strong> {contactoSelec.observaciones}\r\n                    </p>\r\n                </Fragment>          \r\n            :\r\n            <p className=\"Card-text text-center\">Seleccione sun contacto</p>\r\n            \r\n        }\r\n        </div>\r\n        <div className=\"card-footer text-muted\">\r\n            2 days ago\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactoSeleccionado\r\n","import { Fragment, useState } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport Contactos from \"./components/Contactos\";\nimport Header from \"./components/Header\";\nimport ContactoSeleccionado from \"./components/ContactoSeleccionado\";\n\nfunction App() {\n\n  let contactosLS=JSON.parse(localStorage.getItem(\"contactos\"));\n  if(!contactosLS){\n    contactosLS=[];\n  }\n  \n  const [contactos, setContactos] = useState(contactosLS);\n  const [contactoSelec, setContactoSelec] = useState({});\n\n  const agregarContacto = (objContacto)=>{\n    let contactosAntiguos= [...contactos, objContacto];\n    localStorage.setItem(\"contactos\", JSON.stringify(contactosAntiguos))\n    setContactos(contactosAntiguos);\n  }\n\n\n  return (\n    <Fragment>\n      <Header/>\n      <main>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h1 className=\"display-4 text-center mt-2 mb-4\">Agenda <span className=\"text-danger\">APP</span></h1>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <Formulario agregarContacto={agregarContacto} />\n            </div>\n          </div>\n          <div className=\"row mt-4\">\n            <div className=\"col-md-6\">\n              <Contactos contactos={contactos} setContactoSelec={setContactoSelec} />\n            </div>\n            <div className=\"col-md-6\">\n              <ContactoSeleccionado contactoSelec={contactoSelec} />\n            </div>\n          </div>\n        </div>\n      </main>\n     \n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}